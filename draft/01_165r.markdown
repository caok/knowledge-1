### update_all vs update

```ruby
Product.update(params[:products].keys, params[:products].values)
    47: def update_multiple
    48:   Product.update(params[:products].keys, params[:products].values)
 => 49:   binding.pry
    50:   redirect_to products_path
    51: end

[1] pry(#<ProductsController>)> params[:products]
=> {"1"=>
  {"name"=>"First Product",
   "price"=>"10.98",
   "category_id"=>"1",
   "discontinued"=>"0"},
 "2"=>
  {"name"=>"Coffee Table",
   "price"=>"279.99",
   "category_id"=>"1",
   "discontinued"=>"0"}}
```



```ruby
Product.update_all({discontinued: true}, {id: params[:product_ids]})
```

two hash, first to be updated, second is the query


### how to use virtual attribute

```ruby
class Product < ActiveRecord::Base
  belongs_to :category
  attr_accessible :name, :price, :discontinued, :category_id, :price_modification
  validates_numericality_of :price

  attr_reader :price_modification

  def price_modification=(new_price)
    @price_modification = new_price
    if new_price.to_s.ends_with? "%"
      self.price += (price * (new_price.to_d/100)).round(2)
    else
      self.price = new_price
    end
  end
end
```

```ruby
<div class="field">
  <%= f.label :price_modification %><br />
  <%= f.text_field :price_modification %>
</div>
```
